{"version":3,"sources":["ui/TodoForm/index.js","routes/useLocalStorage.js","routes/useTodos.js","routes/edit/EditTodoPage.js","ui/TodoHeader/index.js","ui/TodoCounter/index.js","ui/TodoSearch/index.js","ui/TodoList/index.js","ui/TodoIcon/check.svg","ui/TodoIcon/edit.svg","ui/TodoIcon/delete.svg","ui/TodoIcon/index.js","ui/TodoIcon/CompleteIcon.js","ui/TodoIcon/EditIcon.js","ui/TodoIcon/DeleteIcon.js","ui/TodoItem/index.js","ui/CreateTodoButton/index.js","ui/TodosError/index.js","ui/TodosLoading/index.js","ui/EmptyTodos/index.js","ui/ChangeAlert/index.js","ui/ChangeAlert/useStorageListener.js","routes/home/HomePage.js","routes/new/NewTodoPage.js","routes/App.js","index.js"],"names":["TodoForm","props","navigate","useNavigate","_React$useState","React","useState","defaultTodoText","_React$useState2","Object","slicedToArray","newTodoValue","setNewTodoValue","react_default","a","createElement","onSubmit","event","preventDefault","submitEvent","label","value","onChange","target","placeholder","className","type","onClick","submitText","useLocalStorage","itemName","initialValue","_React$useReducer","useReducer","reducer","initialState","_React$useReducer2","state","dispatch","sincronizedItem","error","loading","item","onError","actionTypes","payload","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","success","saveItem","newItem","stringifiedItem","save","sincronizeItem","sincronize","_ref","action","_ref2","defineProperty","objectSpread","reducerObject","useTodos","_useLocalStorage","todos","saveTodos","sincronizeTodos","searchValue","setSearchValue","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","getTodo","id","todoIndex","findIndex","stateUpdaters","addTodo","todoList","idList","map","Math","max","apply","toConsumableArray","newTodoId","newTodos","push","completeTodo","editTodo","newText","deleteTodo","splice","EditTodoPage","location","useLocation","params","useParams","Number","_useTodos","TodoForm_TodoForm","TodoHeader","children","Children","toArray","child","cloneElement","TodoCounter","concat","TodoSearch","console","log","disabled","TodoList","renderFunc","render","onLoading","onEmptyTodos","onEmptySearchResults","_g","_extends","assign","bind","i","arguments","source","key","prototype","hasOwnProperty","call","this","_path","_path2","check_SvgComponent","xmlnsXlink","version","x","y","viewBox","style","enableBackground","xmlSpace","width","height","d","__webpack_require__","p","edit_extends","delete_path","delete_path2","_path3","edit_SvgComponent","fill","delete_extends","delete_SvgComponent","iconTypes","check","color","edit","delete","TodoIcon","_ref$color","CompleteIcon","onComplete","TodoIcon_TodoIcon","EditIcon","onEdit","DeleteIcon","onDelete","TodoItem","CreateTodoButton","TodosError","TodosLoading","EmptyTodos","ChangeAlert","_useStorageListener","storageChange","setStorageChange","window","addEventListener","change","show","toggleShow","useStorageListener","HomePage","Fragment","TodoCounter_TodoCounter","TodoSearch_TodoSearch","TodoList_TodoList","TodosLoading_TodosLoading","TodoItem_TodoItem","CreateTodoButton_CreateTodoButton","ChangeAlert_ChangeAlert","NewTodoPage","App","dist","react_router_dist","path","element","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.1ac817ee.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './TodoForm.css';\n\nfunction TodoForm(props) {\n    const navigate = useNavigate();\n    const [newTodoValue, setNewTodoValue] = React.useState(props.defaultTodoText || ''); // newTodoValue será un string vacío sólo si defaultTodoText no existe\n    \n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n    const onCancel = () => {\n        navigate('/');\n    };\n    const onSubmit = (event) => {\n        event.preventDefault(); // Gracias a esto no se recarga la página al darle click al botón tipo submit\n        // if (newTodoValue.length <= 0) return; // Esta línea hace que en el caso de que dejemos el texto vacío no agrege nuevo todo\n        props.submitEvent(newTodoValue);\n        navigate('/');\n    };\n\n    return(\n        <form onSubmit={onSubmit}>\n            <label>{props.label}</label>\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder='Introduce un nuevo ToDo'\n            />\n            <div className='TodoForm-buttonContainer'>\n                <button\n                    type='button'\n                    className='TodoForm-button TodoForm-button--cancel'\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n                <button\n                    type='submit'\n                    className='TodoForm-button TodoForm-button--add'\n                >\n                    {props.submitText}\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport { TodoForm };","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n\n  const [state, dispatch] = React.useReducer(reducer, initialState({ initialValue }));\n  const {\n    sincronizedItem,\n    error,\n    loading,\n    item,\n  } = state;\n\n  // ACTION CREATORS\n  const onError = (error) => dispatch({\n    type: actionTypes.error,\n    payload: error,\n  });\n\n  const onSuccess = (item) => dispatch({\n    type: actionTypes.success,\n    payload: item,\n  });\n\n  const onSave = (item) => dispatch({\n    type: actionTypes.save,\n    payload: item,\n  });\n\n  const onSincronize = () => dispatch({\n    type: actionTypes.sincronize,\n  });\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      // controla la persistencia, es un react hook\n      try {\n        const localStorageItem = localStorage.getItem(itemName); // localStorage.getItem recupera lo guardado en el navegador (localStorage).\n        let parsedItem;\n  \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue)); // si no hay localStorageItem generamos uno por defecto que será un array vacío transformado a texto (JSON.stringify) para que localStorage pueda guardarlo\n          parsedItem = initialValue; // además necesitamos un parsedItem, que será un array vacío también\n        } else {\n          parsedItem =JSON.parse(localStorageItem); // como tenemos un localStorage, que siempre es texto, lo pasamos a array (JSON.parse) y lo usamos como parsedItem\n        }\n\n        onSuccess(parsedItem);\n      } catch(error) {\n        onError(error);\n      }\n    }, 2000);\n  }, [sincronizedItem]);\n  \n  const saveItem = (newItem) => { // funcion para actualizar estado con persistencia\n    try {\n      const stringifiedItem = JSON.stringify(newItem); // convierte newItem a texto (newItem se genera en los métodos para completar y eliminar, mas abajo)\n      localStorage.setItem(itemName, stringifiedItem); // guarda en localStorage como item Item_V1 el texto generado anteriormente\n      onSave(newItem); // actualiza el estado de Item igualándolo a newItem\n    } catch(error) {\n      onError(error);\n    }\n  };\n\n  const sincronizeItem = () => {\n    onSincronize();\n  }\n  \n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n    sincronizeItem,\n  }; // tenemos que usar return para que cuando la funcion App llame a esta funcion (useLocalStorage) le devuelva los dos valores que necesita, y también devuelve información de si está cargando o de si hay algún error\n}\n\nconst initialState = ({ initialValue}) => ({\n  sincronizedItem: true,\n  error: false,\n  loading: true,\n  item: initialValue,\n});\n\nconst actionTypes = {\n  error: 'ERROR',\n  success: 'SUCCESS',\n  save: 'SAVE',\n  sincronize: 'SINCRONIZE',\n};\n\nconst reducerObject = (state, payload) => ({\n  [actionTypes.error]: {\n    ...state,\n    error: true,\n  },\n  [actionTypes.success]: {\n    ...state,\n    error: false,\n    loading: false,\n    sincronizedItem: true,\n    item: payload,\n  },\n  [actionTypes.save]: {\n    ...state,\n    item: payload,\n  },\n  [actionTypes.sincronize]: {\n    ...state,\n    sincronizedItem: false,\n    loading: true,\n  }\n});\n\nconst reducer = (state, action) => {\n  return reducerObject(state, action.payload)[action.type] || state;\n};\n\nexport { useLocalStorage };","import React from \"react\";\nimport { useLocalStorage } from './useLocalStorage';\n\nfunction useTodos() { // hacemos un custom hook\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        sincronizeItem: sincronizeTodos,\n        loading,\n        error,\n      } = useLocalStorage('TODOS_V2', []); //llamamos a nuestro custom hook\n      const [searchValue, setSearchValue] = React.useState(''); // el estado usa un array de searchValue y setSearchValue, es igual a un estado que es un array vacío. Esto se guarda en la constante searchValue, y setSearchValue cambia este estado, por tanto cambia searchValue\n    \n      const completedTodos = todos.filter(todo => !!todo.completed).length; // filtra nuestros todo y mira si tiene completed como true gracias a !!\n      const totalTodos = todos.length; // totalTodos nos da el número total de todos que tenemos\n    \n      let searchedTodos = []; // nos crea searchedTodos que va a ser un array vacio\n    \n      if (!searchValue.length >= 1) {\n        searchedTodos = todos; // si no hay al menos una letra de búsqueda iguala el array a nuestro todos, que por defecto es defaultTodos\n      } else {\n        searchedTodos = todos.filter(todo => { // si hay algo en la búsqueda por cada todo:\n          const todoText = todo.text.toLowerCase(); // nos pasa a minúsculas el texto de todo\n          const searchText = searchValue.toLowerCase(); // nos pasa a minúsculas el texto de la búsqueda\n          return todoText.includes(searchText); // nos devuelte los todos cuyo texto incluye la búsqueda, al ser pasado a minúsculas nos lo va a encontrar independientemente de que se busque en mayúsculas o minúsculas\n        });\n      }\n\n      const addTodo = (text) => {\n        const id = newTodoId(todos); // le generamos automáticamente una id a cada nuevo todo\n        const newTodos = [...todos]; // vamos a clonar la lista de todos (eso es con el ...)\n        newTodos.push({\n          completed: false,\n          text,\n          id,\n        });\n        saveTodos(newTodos); //vamos a actualizar el estado de todos para que sea igual a newTodos y a la vez guarda para persistencia, ver la función más arriba\n      };\n\n      const getTodo = (id) => {\n        const todoIndex = todos.findIndex(todo => todo.id === id); // va a buscarnos el índice del todo cuya id coincide con la id aportada a la funcion\n        return todos[todoIndex]; // de la lista de ToDos nos devuelve el que tenga el todoIndex buscado previamente\n      }\n    \n      const completeTodo = (id) => {\n        const todoIndex = todos.findIndex(todo => todo.id === id); // va a buscarnos el índice del todo cuya id coincide con la id aportada a la funcion\n        const newTodos = [...todos]; // vamos a clonar la lista de todos (eso es con el ...)\n        newTodos[todoIndex].completed = true; // de esta lista clonada el que tiene la id coincidente va a ser marcado como completado\n        saveTodos(newTodos); //vamos a actualizar el estado de todos para que sea igual a newTodos y a la vez guarda para persistencia, ver la función más arriba\n      };\n\n      const editTodo = (id, newText) => {\n        const todoIndex = todos.findIndex(todo => todo.id === id); // va a buscarnos el índice del todo cuya id coincide con la id aportada a la funcion\n        const newTodos = [...todos]; // vamos a clonar la lista de todos (eso es con el ...)\n        newTodos[todoIndex].text = newText; // de esta lista clonada el que tiene la id coincidente va a sustituir su texto por el nuevo texto editado\n        saveTodos(newTodos); //vamos a actualizar el estado de todos para que sea igual a newTodos y a la vez guarda para persistencia, ver la función más arriba\n      };\n    \n      const deleteTodo = (id) => {\n        const todoIndex = todos.findIndex(todo => todo.id === id); // va a buscarnos el índice del todo cuya id coincide con el texto aportado a la funcion\n        const newTodos = [...todos]; // vamos a clonar la lista de todos (eso es con el ...)\n        newTodos.splice(todoIndex, 1); // de esta lista clonada el que tiene la id coincidente va a ser eliminado\n        saveTodos(newTodos); //vamos a actualizar el estado de todos para que sea igual a newTodos\n      };\n\n      const state = {\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        searchedTodos,\n        getTodo,\n      };\n\n      const stateUpdaters = {\n        setSearchValue,\n        addTodo,\n        completeTodo,\n        editTodo,\n        deleteTodo,\n        sincronizeTodos,\n      }\n\n    return { state, stateUpdaters };\n}\n\nfunction newTodoId(todoList) { // recibe una lista de todos, es en minúscula porque no es el componente, sino el array de los todos\n  if (!todoList.length) {\n    return 1;\n  }\n\n  const idList = todoList.map(todo => todo.id); // por cada elemento de la lista de todos nos obtiene la id\n  const idMax = Math.max(...idList); // Math.max nos busca el número más alto suministrado. Le suministramos el array de id obtenido antes, pero como elementos individuales gracias a los tres puntos ...\n  return idMax + 1;\n}\n\nexport { useTodos };","import React from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { TodoForm } from '../../ui/TodoForm/index';\nimport { useTodos } from '../useTodos';\n\nfunction EditTodoPage() {\n    const location = useLocation(); // vamos a usar esta location para evitar cargar el texto en editar porque ya existe en home en realidad, no necesita consulta de nuevo\n    const params = useParams(); // esto nos dará los parámetros del todo, useParams viene por defecto en React. Uno de ellos es la id\n    const id = Number(params.id); // los parámetros por defecto son string, como necesitamos un número usamos number para transformar la id\n    const { state, stateUpdaters } = useTodos(); // stateUpdaters es el objeto de useTodo que nos contiene los actualizadores de estado, state contiene estados\n    const { loading, getTodo } = state; // necesitamos el estado getTodo que nos dirá cual es el ToDo actual usando su id, y el estado loading para saber cuando acaba de cargar y la id está disponible\n    const { editTodo } = stateUpdaters; // y nos interesa ese objeto porque es el que contiene nuestra función editTodo\n\n    let todoText; // auxiliar que nos ayudará con el texto\n\n    if (location.state && location.state.todo) { // si existe el estado location.state comprueba si existe location.state.todo\n        todoText= location.state.todo.text; // el texto del todo será el mismo que el de nuestro estado existente\n    } else if (loading) { // si no hay estado comprueba si estamos cargando\n        return <p>Cargando...</p>; // mientras esté cargando no avanzará y nos mostrará el mensaje de carga\n    } else { // una vez que acabe la carga hace la consulta\n        const todo = getTodo(id); // ahora obtenemos nuestro todo usando la función getTodo que usará ya nuestro todo de id específica \n        todoText = todo.text; // e igualamos nuestro todoText al texto del todo obtenido\n    }\n\n    return (\n        <TodoForm\n            label='Edita tu ToDo'\n            defaultTodoText={todoText} // ahora con nuestro todo ya definido usamos todo.text para mostrar por defecto su texto antes de editar\n            submitText='Editar'\n            submitEvent={(newText) => editTodo(id, newText)}\n        />\n    );\n}\n\nexport { EditTodoPage };","import React from 'react';\n\nfunction TodoHeader({ children, loading }) {\n    return (\n        <header>\n            {React.Children.toArray(children).map(child => React.cloneElement(child, { loading }))}\n        </header>\n    );\n}\n\nexport { TodoHeader };","import React from 'react';\nimport './TodoCounter.css';\n\nfunction TodoCounter({ totalTodos, completedTodos, loading }) {\n    return (\n        <h2\n            className={`TodoCounter ${!!loading && 'TodoCounter--loading'}`}\n        >\n            Has completado {completedTodos} de {totalTodos} ToDos\n        </h2>\n    );\n}\n\nexport { TodoCounter };","import React from 'react';\nimport './TodoSearch.css';\n\nfunction TodoSearch({ searchValue, setSearchValue, loading }) {\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value); \n        setSearchValue(event.target.value); // Event target value guarda la información introducida por el usuario en el campo, así que cambiará el searchValue declarado en App.js a eso\n    };\n\n    return (\n        <input \n            className='TodoSearch'\n            placeholder='Cebolla'\n            value={searchValue} // tenemos que aplicar un valor inicial al estado que será el searchValue de la constante declarada en App.js\n            onChange={onSearchValueChange} // en cuanto cambie usamos setSearchValue de App.js para cambiar el estado\n            disabled={loading}\n        />\n    );\n}\n\nexport { TodoSearch };","import React from 'react';\nimport './TodoList.css';\n\nfunction TodoList(props) {\n    const renderFunc = props.children || props.render;\n\n    return(\n        <section className='TodoList-container'>\n            {props.error && props.onError()}\n            {props.loading && props.onLoading()}\n\n            {(!props.loading && !props.totalTodos) && props.onEmptyTodos()}\n\n            {(!!props.totalTodos && !props.searchedTodos.length) && props.onEmptySearchResults(props.searchText)}\n\n            {(!props.loading && !props.error) && props.searchedTodos.map(renderFunc)}\n        </section>\n    );\n}\n\nexport { TodoList };","var _g;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    version: 1.1,\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 507.506 507.506\",\n    style: {\n      \"enableBackground\": \"new 0 0 507.506 507.506\"\n    },\n    xmlSpace: \"preserve\",\n    width: 512,\n    height: 512\n  }, props), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.865,436.934c-14.406,0.006-28.222-5.72-38.4-15.915L9.369,304.966c-12.492-12.496-12.492-32.752,0-45.248l0,0   c12.496-12.492,32.752-12.492,45.248,0l109.248,109.248L452.889,79.942c12.496-12.492,32.752-12.492,45.248,0l0,0   c12.492,12.496,12.492,32.752,0,45.248L202.265,421.019C192.087,431.214,178.271,436.94,163.865,436.934z\"\n  }))));\n};\n\nexport default __webpack_public_path__ + \"static/media/check.988d653f.svg\";\nexport { SvgComponent as ReactComponent };","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"none\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 18.9993V24H5.00069L19.756 9.24459L14.7553 4.2439L0 18.9993Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.6099 3.5038L20.4961 0.390054C19.9761 -0.130018 19.1293 -0.130018 18.6092 0.390054L16.1689 2.83039L21.1695 7.83108L23.60995.39074C24.13 4.87067 24.13 4.02387 23.6099 3.5038Z\"\n  })));\n};\n\nexport default __webpack_public_path__ + \"static/media/edit.7bb702cf.svg\";\nexport { SvgComponent as ReactComponent };","var _path, _path2, _path3;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Outline\",\n    viewBox: \"0 0 24 24\",\n    width: 512,\n    height: 512\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21,4H17.9A5.009,5.009,0,0,0,13,0H11A5.009,5.009,0,0,0,6.1,4H3A1,1,0,0,0,3,6H4V19a5.006,5.006,0,0,0,5,5h6a5.006,5.006,0,0,0,5-5V6h1a1,1,0,0,0,0-2ZM11,2h2a3.006,3.006,0,0,1,2.829,2H8.171A3.006,3.006,0,0,1,11,2Zm7,17a3,3,0,0,1-3,3H9a3,3,0,0,1-3-3V6H18Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10,18a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,10,18Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14,18a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,14,18Z\"\n  })));\n};\n\nexport default __webpack_public_path__ + \"static/media/delete.9b8d46c0.svg\";\nexport { SvgComponent as ReactComponent };","import React from \"react\";\nimport './TodoIcon.css';\nimport { ReactComponent as CheckSVG } from './check.svg';\nimport { ReactComponent as EditSVG } from './edit.svg';\nimport { ReactComponent as DeleteSVG } from './delete.svg';\n\nconst iconTypes = {\n    'check': color => (\n        <CheckSVG className='Icon-svg Icon-svg--check' fill={color} />\n    ),\n    'edit': color => (\n        <EditSVG className='Icon-svg Icon-svg--edit' fill={color} />\n    ),\n    'delete': color => (\n        <DeleteSVG className='Icon-svg Icon-svg--delete' fill={color} />\n    ),\n};\n\nfunction TodoIcon({ type, color = 'gray', onClick }) {\n    return(\n        <span\n            className={`Icon-container Icon-container--${type}`}\n            onClick={onClick}\n        >\n           {iconTypes[type](color)} \n        </span>\n    );\n}\n\nexport { TodoIcon };","import React from 'react';\nimport { TodoIcon } from './index';\n\nfunction CompleteIcon({ completed, onComplete }) {\n    return(\n        <TodoIcon\n            type='check'\n            color={completed ? '#4caf50' : 'gray'}\n            onClick={onComplete}\n        />\n    );\n}\n\nexport { CompleteIcon };","import React from 'react';\nimport { TodoIcon } from './index';\n\nfunction EditIcon({ onEdit }) {\n    return(\n        <TodoIcon\n            type='edit'\n            onClick={onEdit}\n        />\n    );\n}\n\nexport { EditIcon };","import React from \"react\";\nimport { TodoIcon } from \"./index\";\n\nfunction DeleteIcon({ onDelete }) {\n    return(\n        <TodoIcon\n            type='delete'\n            onClick={onDelete}\n        />\n    );\n}\n\nexport { DeleteIcon };","import React from 'react';\nimport { CompleteIcon } from '../TodoIcon/CompleteIcon';\nimport { EditIcon } from '../TodoIcon/EditIcon';\nimport { DeleteIcon } from '../TodoIcon/DeleteIcon';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"TodoItem\">\n      <CompleteIcon\n        completed={props.completed}\n        onComplete={props.onComplete}\n      />\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <EditIcon\n        onEdit={props.onEdit}\n      />\n      <DeleteIcon\n        onDelete={props.onDelete}\n      />\n    </li>\n  );\n}\n\nexport { TodoItem };","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n    return (\n        <button \n            className='CreateTodoButton'\n            onClick={props.onClick}\n        >\n            +\n        </button>\n    );\n}\n\nexport { CreateTodoButton };","import React from \"react\";\n\nfunction TodosError({ error }) {\n    return <p>{error}</p>\n}\n\nexport { TodosError };","import React from \"react\";\nimport './TodosLoading.css';\n\nfunction TodosLoading() {\n    return (\n        <div className=\"LoadingTodo-container\">\n            <span className=\"LoadingTodo-completeIcon\"></span>\n            <p className=\"LoadingTodo-text\">Cargando ToDos...</p>\n            <span className=\"LoadingTodo-deleteIcon\"></span>\n        </div>\n    );\n}\n\nexport { TodosLoading };","import React from \"react\";\n\nfunction EmptyTodos() {\n    return <p>¡Crea tu primer ToDo!</p>\n}\n\nexport { EmptyTodos };","import React from 'react';\nimport { useStorageListener } from './useStorageListener';\nimport './ChangeAlert.css';\n\nfunction ChangeAlert({ sincronize }) {\n  const { show, toggleShow } = useStorageListener(sincronize);\n  if (show) {\n    return (\n      <div className=\"ChangeAlert-bg\">\n        <div className=\"ChangeAlert-container\">\n          <p>Parece que cambiaste tus TODOs en otra pestaña o ventana del navegador.</p>\n          <p>¿Quieres sincronizar tus TODOs?</p>\n          <button\n            className=\"TodoForm-button TodoForm-button--add\"\n            onClick={toggleShow}\n          >\n            Yes!\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport { ChangeAlert };","import React from 'react';\n\nfunction useStorageListener(sincronize) {\n  const [storageChange, setStorageChange] = React.useState(false);\n    \n  window.addEventListener('storage', (change) => {\n    if (change.key === 'TODOS_V1') {\n      console.log('Hubo cambios en TODOS_V1');\n      setStorageChange(true);\n    }\n  });\n\n  const toggleShow = () => {\n    sincronize();\n    setStorageChange(false);\n  };\n\n  return {\n    show: storageChange,\n    toggleShow,\n  };\n}\n\n\nexport { useStorageListener };","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useTodos } from '../useTodos';\nimport { TodoHeader } from '../../ui/TodoHeader/index';\nimport { TodoCounter } from \"../../ui/TodoCounter\";\nimport { TodoSearch } from \"../../ui/TodoSearch\";\nimport { TodoList } from '../../ui/TodoList/index';\nimport { TodoItem } from '../../ui/TodoItem/index';\nimport { CreateTodoButton } from '../../ui/CreateTodoButton/index';\nimport { Modal } from '../../ui/Modal/index';\nimport { TodosError } from '../../ui/TodosError/index';\nimport { TodosLoading } from '../../ui/TodosLoading/index';\nimport { EmptyTodos } from '../../ui/EmptyTodos/index';\nimport { ChangeAlert } from '../../ui/ChangeAlert/index';\n\nfunction HomePage() {\n  const navigate = useNavigate();\n  const { state, stateUpdaters } = useTodos();\n\n  const {\n    loading,\n    error,\n    totalTodos,\n    completedTodos,\n    searchValue,\n    searchedTodos,\n    //openModal,\n  } = state;\n\n  const {\n    setSearchValue,\n    //addTodo,\n    completeTodo,\n    deleteTodo,\n    //setOpenModal,\n    sincronizeTodos,\n  } = stateUpdaters;\n\n  return(\n    <React.Fragment>\n      <TodoHeader loading={loading}>\n        <TodoCounter\n          totalTodos={totalTodos}\n          completedTodos={completedTodos}\n        />\n        <TodoSearch\n          searchValue={searchValue}\n          setSearchValue={setSearchValue}\n        />\n      </TodoHeader>\n\n    <TodoList\n      error={error}\n      loading={loading}\n      searchedTodos={searchedTodos}\n      searchText={searchValue}\n      totalTodos={totalTodos}\n      onError={() => <TodosError />}\n      onLoading={() => <TodosLoading />}\n      onEmptyTodos={() => <EmptyTodos />}\n      onEmptySearchResults={\n        (searchText) => <p>No hay resultados para {searchText}</p>\n      }\n\n    >\n      {todo => (\n        <TodoItem \n          key={todo.id} \n          text={todo.text} \n          completed={todo.completed}\n          onEdit={() => navigate('/edit/' + todo.id, { state: { todo } },)} // le damos dos parámetros, la ruta con id y un estado que es el todo\n          onComplete={() => completeTodo(todo.id)} // con onComplete mandamos a la función completeTodo el texto de ese todo\n          onDelete={() => deleteTodo(todo.id)} \n        />\n        )}\n    </TodoList>\n  \n    {/*{!!openModal && (\n        <Modal>\n            <TodoForm\n              addTodo={addTodo}\n              setOpenModal={setOpenModal}\n            />\n        </Modal>\n    )}*/}\n\n    <CreateTodoButton\n      onClick={() => navigate('/new')}\n        //setOpenModal={setOpenModal}\n    />\n    <ChangeAlert\n      sincronize={sincronizeTodos}\n    />\n    </React.Fragment>\n  );\n}\n\nexport { HomePage };\n","import React from 'react';\nimport { TodoForm } from '../../ui/TodoForm/index';\nimport { useTodos } from '../useTodos';\n\nfunction NewTodoPage() {\n    const { stateUpdaters } = useTodos();\n    const { addTodo } = stateUpdaters;\n\n    return (\n        <TodoForm\n            label='Escribe tu nuevo ToDo'\n            submitText='Añadir'\n            submitEvent={(text) => addTodo(text)}\n        />\n    );\n}\n\nexport { NewTodoPage };","import React from 'react';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\nimport { EditTodoPage } from './edit/EditTodoPage';\nimport { HomePage } from './home/HomePage';\nimport { NewTodoPage } from './new/NewTodoPage';\n\nfunction App() {\n  return(\n    <HashRouter>\n      <Routes>\n        <Route path='/' element={<HomePage />} />\n        <Route path='/new' element={<NewTodoPage />} />\n        <Route path='/edit/:id' element={<EditTodoPage />} />\n        <Route path='*' element={<p>Not found</p>} />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { App } from './routes/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}